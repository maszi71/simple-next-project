{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/masoud/React 2021/Udemy - React - The Complete Guide (incl Hooks, React Router, Redux) 2021-5/23 A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction meetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" Add new meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"create new meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description,\n      image: props.meetupData.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport var __N_SSG = true;\nexport default meetupDetails;","map":{"version":3,"sources":["/Volumes/masoud/React 2021/Udemy - React - The Complete Guide (incl Hooks, React Router, Redux) 2021-5/23 A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","meetupDetails","props","meetupData","title","address","description","image"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE,OAF5B;AAGE,MAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG,WAHhC;AAIE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ1B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;;AAED,eAAeN,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction meetupDetails(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title> Add new meetup</title>\n        <meta\n          name=\"description\"\n          content=\"create new meetups\"\n        />\n      </Head>\n      <MeetupDetail\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n        image={props.meetupData.image}\n      />\n    </Fragment>\n  );\n}\n\nexport default meetupDetails;\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://masoud:Yro77eIUz13KTX29@cluster0.h8yse.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetup\");\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n  //get access to all object . first arg : empty object means assess to all object\n  // second arg : whiech field should be extracted (here only ids)\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://masoud:Yro77eIUz13KTX29@cluster0.h8yse.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetup\");\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n  // findOne : find single document and inside of object we determine how to search document\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}